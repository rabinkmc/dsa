!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
F	binary_search/find_peak.py	/^F = False$/;"	v
Food	2353.py	/^class Food:$/;"	c
FoodRatings	2353.py	/^class FoodRatings:$/;"	c
ListNode	141-linked-list_cycle.py	/^class ListNode:$/;"	c
ListNode	206-reverse-linked-list.py	/^class ListNode:$/;"	c
ListNode	234-palindrome-linked-list.py	/^class ListNode:$/;"	c
MyQueue	232-implement-queue-using-stack.py	/^class MyQueue:$/;"	c
Node	113.py	/^class Node:$/;"	c
Node	257.py	/^class Node:$/;"	c
Node	binary_tree.py	/^class Node:$/;"	c
Node	good_node.py	/^class Node:$/;"	c
Node	templates/reverse_link_list.py	/^class Node:$/;"	c
START	study_guide.py	/^START = 31$/;"	v
SmallestInfiniteSet	2336.py	/^class SmallestInfiniteSet:$/;"	c
Solution	1-two-sum.py	/^class Solution:$/;"	c
Solution	100169.py	/^class Solution:$/;"	c
Solution	100185-find-longest-special-substring-that-occurs-thrice-i.py	/^class Solution:$/;"	c
Solution	102-binary-tree-level-order-traversavel.py	/^class Solution:$/;"	c
Solution	104-maximum-depth-of-binary-tree.py	/^class Solution:$/;"	c
Solution	1071.py	/^class Solution:$/;"	c
Solution	108-convert-sorted-array-to-binary-search-tree.py	/^class Solution:$/;"	c
Solution	110-balanced-binary-tree.py	/^class Solution:$/;"	c
Solution	114.py	/^class Solution:$/;"	c
Solution	1143.py	/^class Solution:$/;"	c
Solution	122.py	/^class Solution:$/;"	c
Solution	128.py	/^class Solution:$/;"	c
Solution	13-roman-to-integer.py	/^class Solution:$/;"	c
Solution	133-clone-graph.py	/^class Solution:$/;"	c
Solution	141-linked-list_cycle.py	/^class Solution:$/;"	c
Solution	1466.py	/^class Solution:$/;"	c
Solution	15-3sum.py	/^class Solution:$/;"	c
Solution	150-evaluate-reverse-polish-notation.py	/^class Solution:$/;"	c
Solution	153-find-minimum-in-rotated-sorted-array.py	/^class Solution:$/;"	c
Solution	162.py	/^class Solution:$/;"	c
Solution	17.py	/^class Solution:$/;"	c
Solution	190-reverse-bits.py	/^class Solution:$/;"	c
Solution	198.py	/^class Solution:$/;"	c
Solution	200-number-of-islands.py	/^class Solution:$/;"	c
Solution	2009.py	/^class Solution:$/;"	c
Solution	206-reverse-linked-list.py	/^class Solution:$/;"	c
Solution	207-course-schedule.py	/^class Solution:$/;"	c
Solution	209.py	/^class Solution:$/;"	c
Solution	215.py	/^class Solution:$/;"	c
Solution	216.py	/^class Solution:$/;"	c
Solution	2300.py	/^class Solution:$/;"	c
Solution	234-palindrome-linked-list.py	/^class Solution:$/;"	c
Solution	235.py	/^class Solution:$/;"	c
Solution	236.py	/^class Solution:$/;"	c
Solution	238-product-except-self.py	/^class Solution:$/;"	c
Solution	238.py	/^class Solution:$/;"	c
Solution	26.py	/^class Solution:$/;"	c
Solution	2610-convert-an-array-into-2d-matrix.py	/^class Solution:$/;"	c
Solution	27.py	/^class Solution:$/;"	c
Solution	278-first-bad-version.py	/^class Solution:$/;"	c
Solution	2894.py	/^class Solution:$/;"	c
Solution	2895.py	/^class Solution:$/;"	c
Solution	2908.py	/^class Solution:$/;"	c
Solution	2910.py	/^class Solution:$/;"	c
Solution	2913.py	/^class Solution:$/;"	c
Solution	2914.py	/^class Solution:$/;"	c
Solution	2915.py	/^class Solution:$/;"	c
Solution	2917.py	/^class Solution:$/;"	c
Solution	2918.py	/^class Solution:$/;"	c
Solution	3-longest-substring-without-repeating-character.py	/^class Solution:$/;"	c
Solution	3.py	/^class Solution:$/;"	c
Solution	300.py	/^class Solution:$/;"	c
Solution	322-coin-change.py	/^class Solution:$/;"	c
Solution	33-search-in-rotated-array.py	/^class Solution:$/;"	c
Solution	36-valid-sudoku.py	/^class Solution:$/;"	c
Solution	383-ransom-note.py	/^class Solution:$/;"	c
Solution	39.py	/^class Solution:$/;"	c
Solution	399.py	/^class Solution:$/;"	c
Solution	409-longest-palindrome.py	/^class Solution:$/;"	c
Solution	435.py	/^class Solution:$/;"	c
Solution	437.py	/^class Solution:$/;"	c
Solution	45.py	/^class Solution:$/;"	c
Solution	452.py	/^class Solution:$/;"	c
Solution	455-assign-cookies.py	/^class Solution:$/;"	c
Solution	46-permutations.py	/^class Solution:$/;"	c
Solution	49.py	/^class Solution:$/;"	c
Solution	53-maximum-subarray.py	/^class Solution:$/;"	c
Solution	542-01-matrix.py	/^class Solution:$/;"	c
Solution	543-diameter-of-binary-tree.py	/^class Solution:$/;"	c
Solution	547.py	/^class Solution:$/;"	c
Solution	55.py	/^class Solution:$/;"	c
Solution	56.py	/^class Solution:$/;"	c
Solution	57-insert-interval.py	/^class Solution:$/;"	c
Solution	572-subtree-of-another-tree.py	/^class Solution:$/;"	c
Solution	6.py	/^class Solution:$/;"	c
Solution	62.py	/^class Solution:$/;"	c
Solution	649.py	/^class Solution:$/;"	c
Solution	67-add-binary.py	/^class Solution:$/;"	c
Solution	70-climbing-stairs.py	/^class Solution:$/;"	c
Solution	704-binary-search.py	/^class Solution:$/;"	c
Solution	714.py	/^class Solution:$/;"	c
Solution	721-accounts-merge.py	/^class Solution:$/;"	c
Solution	733-flood-fill.py	/^class Solution:$/;"	c
Solution	746.py	/^class Solution:$/;"	c
Solution	75-sort-colors.py	/^class Solution:$/;"	c
Solution	78-subsets.py	/^class Solution:$/;"	c
Solution	79-word-search.py	/^class Solution:$/;"	c
Solution	790.py	/^class Solution:$/;"	c
Solution	80.py	/^class Solution:$/;"	c
Solution	841.py	/^class Solution:$/;"	c
Solution	875.py	/^class Solution:$/;"	c
Solution	876-middle-of-the-linked-list.py	/^class Solution:$/;"	c
Solution	88.py	/^class Solution:$/;"	c
Solution	973-k-closest-points-to-origin.py	/^class Solution:$/;"	c
Solution	977-squares-of-sorted-array.py	/^class Solution:$/;"	c
Solution	98-validate-binary-search-tree.py	/^class Solution:$/;"	c
Solution	994-rotting-oranges.py	/^class Solution:$/;"	c
Solution	994.py	/^class Solution:$/;"	c
Solution	contest_117.py	/^class Solution:$/;"	c
Solution	contest_120.py/100171.py	/^class Solution:$/;"	c
Solution	contest_120.py/100180.py	/^class Solution:$/;"	c
Solution	contest_120.py/2542.py	/^class Solution:$/;"	c
Solution	decode_str.py	/^class Solution:$/;"	c
Solution	leetcode2.py	/^class Solution:$/;"	c
Solution	leetcode3.py	/^class Solution:$/;"	c
Solution	leetcode4.py	/^class Solution:$/;"	c
Solution	leetcode5.py	/^class Solution:$/;"	c
Solution	string_compression.py	/^class Solution:$/;"	c
Solution2	leetcode1.py	/^class Solution2:$/;"	c
Solution3	leetcode1.py	/^class Solution3:$/;"	c
T	binary_search/find_peak.py	/^T = True$/;"	v
TreeNode	102-binary-tree-level-order-traversavel.py	/^class TreeNode:$/;"	c
TreeNode	108-convert-sorted-array-to-binary-search-tree.py	/^class TreeNode:$/;"	c
TreeNode	110-balanced-binary-tree.py	/^class TreeNode:$/;"	c
TreeNode	114.py	/^class TreeNode:$/;"	c
TreeNode	235.py	/^class TreeNode:$/;"	c
TreeNode	236.py	/^class TreeNode:$/;"	c
TreeNode	437.py	/^class TreeNode:$/;"	c
TreeNode	543-diameter-of-binary-tree.py	/^class TreeNode:$/;"	c
TreeNode	98-validate-binary-search-tree.py	/^class TreeNode:$/;"	c
TreeNode	bst.py	/^class TreeNode:$/;"	c
TreeNode	longest_zigzag.py	/^class TreeNode:$/;"	c
TreeNode	path_sum3.py	/^class TreeNode:$/;"	c
TreeNode	tree/height.py	/^class TreeNode:$/;"	c
TreeNode	tree/leaf_node_sum.py	/^class TreeNode:$/;"	c
TrieNode	templates/trie.py	/^class TrieNode:$/;"	c
__init__	102-binary-tree-level-order-traversavel.py	/^    def __init__(self, val=0, left=None, right=None):$/;"	m	class:TreeNode
__init__	108-convert-sorted-array-to-binary-search-tree.py	/^    def __init__(self, val=0, left=None, right=None):$/;"	m	class:TreeNode
__init__	110-balanced-binary-tree.py	/^    def __init__(self, val=0, left=None, right=None):$/;"	m	class:TreeNode
__init__	113.py	/^    def __init__(self, val=None, left=None, right=None):$/;"	m	class:Node
__init__	114.py	/^    def __init__(self, val=0, left=None, right=None):$/;"	m	class:TreeNode
__init__	141-linked-list_cycle.py	/^    def __init__(self, x):$/;"	m	class:ListNode
__init__	206-reverse-linked-list.py	/^    def __init__(self, val=0, next=None):$/;"	m	class:ListNode
__init__	232-implement-queue-using-stack.py	/^    def __init__(self):$/;"	m	class:MyQueue
__init__	2336.py	/^    def __init__(self):$/;"	m	class:SmallestInfiniteSet
__init__	234-palindrome-linked-list.py	/^    def __init__(self, val=0, next=None):$/;"	m	class:ListNode
__init__	235.py	/^    def __init__(self, x, left=None, right=None, level=0):$/;"	m	class:TreeNode
__init__	2353.py	/^    def __init__(self, foods: List[str], cuisines: List[str], ratings: List[int]):$/;"	m	class:FoodRatings
__init__	2353.py	/^    def __init__(self, name, rating):$/;"	m	class:Food
__init__	236.py	/^    def __init__(self, x, left=None, right=None, level=0):$/;"	m	class:TreeNode
__init__	257.py	/^    def __init__(self, val=None, left=None, right=None):$/;"	m	class:Node
__init__	437.py	/^    def __init__(self, val=0, left=None, right=None):$/;"	m	class:TreeNode
__init__	543-diameter-of-binary-tree.py	/^    def __init__(self, val=0, left=None, right=None):$/;"	m	class:TreeNode
__init__	98-validate-binary-search-tree.py	/^    def __init__(self, val=0, left=None, right=None):$/;"	m	class:TreeNode
__init__	binary_tree.py	/^    def __init__(self, val=None, left=None, right=None):$/;"	m	class:Node
__init__	bst.py	/^    def __init__(self, val=0, left=None, right=None):$/;"	m	class:TreeNode
__init__	good_node.py	/^    def __init__(self, val=0, left=None, right=None):$/;"	m	class:Node
__init__	longest_zigzag.py	/^    def __init__(self, val=0, left=None, right=None):$/;"	m	class:TreeNode
__init__	path_sum3.py	/^    def __init__(self, val=0, left=None, right=None):$/;"	m	class:TreeNode
__init__	templates/reverse_link_list.py	/^    def __init__(self, val=0, next=None):$/;"	m	class:Node
__init__	templates/trie.py	/^    def __init__(self):$/;"	m	class:TrieNode
__init__	tree/height.py	/^    def __init__(self, val=0, left=None, right=None):$/;"	m	class:TreeNode
__init__	tree/leaf_node_sum.py	/^    def __init__(self, val=0, left=None, right=None):$/;"	m	class:TreeNode
__lt__	2353.py	/^    def __lt__(self, other):$/;"	m	class:Food	file:
__str__	206-reverse-linked-list.py	/^    def __str__(self):$/;"	m	class:ListNode	file:
__str__	234-palindrome-linked-list.py	/^    def __str__(self):$/;"	m	class:ListNode	file:
__str__	templates/reverse_link_list.py	/^    def __str__(self):$/;"	m	class:Node	file:
abcd	climbing_stairs.py	/^abcd = [1, 100, 1, 1, 1, 100, 1, 1, 100, 1]$/;"	v
accounts	721-accounts-merge.py	/^accounts = [$/;"	v
accountsMerge	721-accounts-merge.py	/^    def accountsMerge(self, accounts: List[List[str]]) -> List[List[str]]:$/;"	m	class:Solution
addBack	2336.py	/^    def addBack(self, num: int) -> None:$/;"	m	class:SmallestInfiniteSet
addBinary	67-add-binary.py	/^    def addBinary(self, a: str, b: str) -> str:$/;"	m	class:Solution
ans	100185-find-longest-special-substring-that-occurs-thrice-i.py	/^ans = maximumLength(s)$/;"	v
ans	102-binary-tree-level-order-traversavel.py	/^ans = Solution().levelOrder(root)$/;"	v
ans	110-balanced-binary-tree.py	/^ans = Solution().isBalanced(root)$/;"	v
ans	114.py	/^ans = Solution().flatten(root)$/;"	v
ans	128.py	/^ans = Solution().longestConsecutive(nums)$/;"	v
ans	15-3sum.py	/^ans = Solution().threeSum(nums)$/;"	v
ans	150-evaluate-reverse-polish-notation.py	/^ans = Solution().evalRPN(tokens)$/;"	v
ans	190-reverse-bits.py	/^ans = Solution().reverseBits(4)$/;"	v
ans	200-number-of-islands.py	/^ans = Solution().numIslands(grid)$/;"	v
ans	2610-convert-an-array-into-2d-matrix.py	/^ans = Solution().findMatrix(nums)$/;"	v
ans	2895.py	/^ans = Solution().minProcessingTime(processorTime, tasks)$/;"	v
ans	2910.py	/^ans = Solution().minGroupsForValidAssignment(nums)$/;"	v
ans	2914.py	/^ans = Solution().minChanges(s)$/;"	v
ans	3-longest-substring-without-repeating-character.py	/^ans = Solution().lengthOfLongestSubstring(s = "abcabcbb")$/;"	v
ans	3.py	/^ans = Solution().lengthOfLongestSubstring(s)$/;"	v
ans	322-coin-change.py	/^ans = Solution().coinChange([1, 2, 3, 4], 4)$/;"	v
ans	36-valid-sudoku.py	/^ans = Solution().isValidSudoku(board)$/;"	v
ans	435.py	/^ans = Solution().eraseOverlapIntervals(intervals)$/;"	v
ans	452.py	/^ans = Solution().findMinArrowShots(points)$/;"	v
ans	455-assign-cookies.py	/^ans = solution.findContentChildren(g = [1,2,3], s = [1,1])$/;"	v
ans	455-assign-cookies.py	/^ans = solution.findContentChildren(g = [1,2], s = [1,2, 3])$/;"	v
ans	46-permutations.py	/^ans = Solution().permute(nums)$/;"	v
ans	49.py	/^ans = Solution().groupAnagrams(strs)$/;"	v
ans	53-maximum-subarray.py	/^ans = solution.maxSubArray([-2,1,-3,4,-1,2,1,-5,4])$/;"	v
ans	542-01-matrix.py	/^ans = Solution().updateMatrix(mat)$/;"	v
ans	543-diameter-of-binary-tree.py	/^ans = Solution().diameterOfBinaryTree(root)$/;"	v
ans	55.py	/^ans = Solution().canJump(nums)$/;"	v
ans	56.py	/^ans = Solution().merge(intervals) $/;"	v
ans	57-insert-interval.py	/^ans = solution.insert(interval, [4, 8])$/;"	v
ans	6.py	/^ans = Solution().convert(s, numRows)$/;"	v
ans	78-subsets.py	/^ans = Solution().subsets(nums)$/;"	v
ans	79-word-search.py	/^ans = Solution().exist(board, word)$/;"	v
ans	973-k-closest-points-to-origin.py	/^ans = Solution().kClosest(points, k)$/;"	v
ans	977-squares-of-sorted-array.py	/^ans = Solution().sortedSquares([-3, -2, 0, 1, 3, 9])$/;"	v
ans	contest_120.py/100171.py	/^ans = Solution().incremovableSubarrayCount(nums)$/;"	v
ans	contest_120.py/2542.py	/^ans = Solution().maxScore(nums1, nums2, k)$/;"	v
ans1	733-flood-fill.py	/^ans1 = solution.floodFill(image=[[1, 1, 1], [1, 1, 0], [1, 0, 1]], sr=1, sc=1, color=2)$/;"	v
ans2	733-flood-fill.py	/^ans2 = solution.floodFill(image=[[0, 0, 0], [0, 0, 0]], sr=0, sc=0, color=0)$/;"	v
answer	2913.py	/^answer = Solution().sumCounts([1, 1])$/;"	v
answer	643.py	/^answer = findMaxAverage(nums, k=1)$/;"	v
answer	string_compression.py	/^answer = Solution().compress(chars)$/;"	v
backtrack	46-permutations.py	/^        def backtrack(nums, candidates=[]):$/;"	f	function:Solution.permute
backtrack	templates/backtrack.py	/^def backtrack(candidate):$/;"	f
backtrack	templates/backtrack.py	/^def backtrack(curr, OTHER_ARGUMENTS...):$/;"	f
board	36-valid-sudoku.py	/^board = [$/;"	v
board	79-word-search.py	/^board = [$/;"	v
board	79-word-search.py	/^board = [["A", "B", "C", "E"], ["S", "F", "C", "S"], ["A", "D", "E", "E"]]$/;"	v
board	79-word-search.py	/^board = [["A", "B", "C", "E"], ["S", "F", "E", "S"], ["A", "D", "E", "E"]]$/;"	v
board	79-word-search.py	/^board = [["C", "A", "A"], ["A", "A", "A"], ["B", "C", "D"]]$/;"	v
board	79-word-search.py	/^board = [["a", "a"]]$/;"	v
board	79-word-search.py	/^board = [["a", "b"]]$/;"	v
bsearch	2300.py	/^    def bsearch(self, nums, target):$/;"	m	class:Solution
bsearch_lte	2009.py	/^    def bsearch_lte(self, nums, target):$/;"	m	class:Solution
bth	tree/height.py	/^bth = it_height_bfs(root)$/;"	v
calcEquation	399.py	/^    def calcEquation($/;"	m	class:Solution
canConstruct	383-ransom-note.py	/^    def canConstruct(self, ransomNote: str, magazine: str) -> bool:$/;"	m	class:Solution
canFinish	207-course-schedule.py	/^    def canFinish(self, numCourses: int, prerequisites: List[List[int]]) -> bool:$/;"	m	class:Solution
canFinish	875.py	/^    def canFinish(self, piles, h, k):$/;"	m	class:Solution
canJump	55.py	/^    def canJump(self, nums: List[int]) -> bool:$/;"	m	class:Solution
canVisitAllRooms	841.py	/^    def canVisitAllRooms(self, rooms: List[List[int]]) -> bool:$/;"	m	class:Solution
candidates	39.py	/^candidates = [2, 3, 6, 7]$/;"	v
changeRating	2353.py	/^    def changeRating(self, food: str, newRating: int) -> None:$/;"	m	class:FoodRatings
chars	string_compression.py	/^chars = ["a", "a", "b", "b", "c", "c", "c"]$/;"	v
check	templates/binary_search_greedy.py	/^    def check(x):$/;"	f	function:fn
check	templates/binary_search_maximum.py	/^    def check(x):$/;"	f	function:fn
climbStairs	70-climbing-stairs.py	/^    def climbStairs(self, n: int) -> int:$/;"	m	class:Solution
cloneGraph	133-clone-graph.py	/^    def cloneGraph(self, node: Optional['Node']) -> Optional['Node']:$/;"	m	class:Solution
coinChange	322-coin-change.py	/^    def coinChange(self, coins: List[int], amount: int) -> int:$/;"	m	class:Solution
coins	leetcode3.py	/^coins = [1, 4, 10]$/;"	v
combinationSum	39.py	/^    def combinationSum(self, candidates: List[int], target: int) -> List[List[int]]:$/;"	m	class:Solution
combinationSum3	216.py	/^    def combinationSum3(self, k: int, n: int) -> List[List[int]]:$/;"	m	class:Solution
compress	string_compression.py	/^    def compress(self, chars: list[str]) -> int:$/;"	m	class:Solution
connections	1466.py	/^connections = [[0, 1], [1, 3], [2, 3], [4, 0], [4, 5]]$/;"	v
convert	6.py	/^    def convert(self, s: str, numRows: int) -> str:$/;"	m	class:Solution
cost	746.py	/^cost = [1, 100, 1, 1, 1, 100, 1, 1, 100, 1]$/;"	v
cost	dijkstra.py	/^    cost = costs[node]$/;"	v
cost	dijkstra1.py	/^    cost = costs[node]$/;"	v
costs	dijkstra.py	/^costs = {}$/;"	v
costs	dijkstra1.py	/^costs = {}$/;"	v
count	100166-check-if-bitwise-or-has-trailing-zeros.py	/^count = sum(1 if num % 2 == 0 else 0 for num in nums)$/;"	v
count	path_sum3.py	/^count = 0$/;"	v
countBits	count_bits.py	/^def countBits(n: int) -> list[int]:$/;"	f
cuisines	2353.py	/^cuisines = ["snaxol", "snaxol", "snaxol", "fajbervsj", "fajbervsj"]$/;"	v
data	study_guide.py	/^data = open("study_guide.md").read().strip("\\n").split("\\n")$/;"	v
decodeString	decode_str.py	/^    def decodeString(self, s: str) -> str:$/;"	m	class:Solution
dfs	113.py	/^def dfs(node):$/;"	f
dfs	114.py	/^        def dfs(node):$/;"	f	function:Solution.flatten
dfs	1466.py	/^        def dfs(node):$/;"	f	function:Solution.minReorder
dfs	200-number-of-islands.py	/^        def dfs(node):$/;"	f	function:Solution.numIslands
dfs	216.py	/^        def dfs(i, path=[], total=0):$/;"	f	function:Solution.combinationSum3
dfs	236.py	/^        def dfs(node, parent=None, level=0):$/;"	f	function:Solution.lowestCommonAncestor
dfs	257.py	/^def dfs(node):$/;"	f
dfs	2915.py	/^        def dfs(i,target, path=[]):$/;"	f	function:Solution.lengthOfLongestSubsequence
dfs	399.py	/^        def dfs(node, end, visited, product=1):$/;"	f	function:Solution.calcEquation
dfs	437.py	/^        def dfs(node, target):$/;"	f	function:Solution.pathSum
dfs	543-diameter-of-binary-tree.py	/^    def dfs(self, root: Optional[TreeNode]):$/;"	m	class:Solution
dfs	572-subtree-of-another-tree.py	/^        def dfs(root, subroot):$/;"	f	function:Solution.isSubtree
dfs	79-word-search.py	/^        def dfs(r, c, word):$/;"	f	function:Solution.exist
dfs	good_node.py	/^def dfs(node):$/;"	f
dfs	longest_zigzag.py	/^def dfs(node):$/;"	f
dfs	path_sum3.py	/^def dfs(node, targetSum, path=[]):$/;"	f
dfs	templates/dfs_iterative.py	/^def dfs(root):$/;"	f
dfs	templates/dfs_recursive.py	/^def dfs(root):$/;"	f
dfs	templates/graph_dfs_recursive.py	/^    def dfs(node):$/;"	f	function:fn
diameterOfBinaryTree	543-diameter-of-binary-tree.py	/^    def diameterOfBinaryTree(self, root: Optional[TreeNode]) -> int:$/;"	m	class:Solution
diff	100169.py	/^        def diff(bar, size):$/;"	f	function:Solution.maximizeSquareArea
differenceOfSums	2894.py	/^    def differenceOfSums(self, n: int, m: int) -> int:$/;"	m	class:Solution
dist	templates/dijkstra.py	/^        dist = curr_dist + weight$/;"	v
distances	templates/dijkstra.py	/^distances = [inf] * n$/;"	v
distributeCandies	contest_117.py	/^    def distributeCandies(self, n: int, limit: int) -> int:$/;"	m	class:Solution
eight	113.py	/^eight = Node(8, left=thirteen, right=four_right)$/;"	v
eight	235.py	/^eight = TreeNode(8)$/;"	v
eight	236.py	/^eight = TreeNode(8)$/;"	v
eight	257.py	/^eight = Node(8, left=thirteen, right=four_right)$/;"	v
eight	437.py	/^eight = TreeNode(8, left=thirteen, right=four_right)$/;"	v
eleven	113.py	/^eleven = Node(11, left=seven, right=two)$/;"	v
eleven	257.py	/^eleven = Node(11, left=seven, right=two)$/;"	v
eleven	437.py	/^eleven = TreeNode(11, left=seven, right=two)$/;"	v
eleven_leaf	102-binary-tree-level-order-traversavel.py	/^eleven_leaf = TreeNode(11)$/;"	v
eleven_leaf	110-balanced-binary-tree.py	/^eleven_leaf = TreeNode(11)$/;"	v
eleven_leaf	114.py	/^eleven_leaf = TreeNode(11)$/;"	v
eleven_leaf	543-diameter-of-binary-tree.py	/^eleven_leaf = TreeNode(11)$/;"	v
eleven_leaf	98-validate-binary-search-tree.py	/^eleven_leaf = TreeNode(11)$/;"	v
eleven_leaf	bst.py	/^eleven_leaf = TreeNode(11)$/;"	v
eleven_leaf	longest_zigzag.py	/^eleven_leaf = TreeNode(11)$/;"	v
eleven_leaf	path_sum3.py	/^eleven_leaf = TreeNode(11)$/;"	v
eleven_leaf	tree/height.py	/^eleven_leaf = TreeNode(11)$/;"	v
eleven_leaf	tree/leaf_node_sum.py	/^eleven_leaf = TreeNode(11)$/;"	v
empty	232-implement-queue-using-stack.py	/^    def empty(self) -> bool:$/;"	m	class:MyQueue
equations	399.py	/^equations = [["x1", "x2"], ["x2", "x3"], ["x3", "x4"], ["x4", "x5"]]$/;"	v
eraseOverlapIntervals	435.py	/^    def eraseOverlapIntervals(self, intervals: List[List[int]]) -> int:$/;"	m	class:Solution
evalRPN	150-evaluate-reverse-polish-notation.py	/^    def evalRPN(self, tokens: List[str]) -> int:$/;"	m	class:Solution
exist	79-word-search.py	/^    def exist(self, board: List[List[str]], word: str) -> bool:$/;"	m	class:Solution
f	leetcode1.py	/^        def f(a, b, c, d):$/;"	f	function:Solution2.getGoodIndices
f1	234-palindrome-linked-list.py	/^f1 = ListNode(1, next=f2)$/;"	v
f2	234-palindrome-linked-list.py	/^f2 = ListNode(2, next=f3)$/;"	v
f3	234-palindrome-linked-list.py	/^f3 = ListNode(3, next=f4)$/;"	v
f4	234-palindrome-linked-list.py	/^f4 = ListNode(3, next=f5)$/;"	v
f5	234-palindrome-linked-list.py	/^f5 = ListNode(2, next=f6)$/;"	v
f6	234-palindrome-linked-list.py	/^f6 = ListNode(1)$/;"	v
findCircleNum	547.py	/^    def findCircleNum(self, isConnected: List[List[int]]) -> int:$/;"	m	class:Solution
findContentChildren	455-assign-cookies.py	/^    def findContentChildren(self, g: List[int], s: List[int]) -> int:$/;"	m	class:Solution
findKOr	2917.py	/^    def findKOr(self, nums: List[int], k: int) -> int:$/;"	m	class:Solution
findKthLargest	215.py	/^    def findKthLargest(self, nums: List[int], k: int) -> int:$/;"	m	class:Solution
findMatrix	2610-convert-an-array-into-2d-matrix.py	/^    def findMatrix(self, nums: List[int]) -> List[List[int]]:$/;"	m	class:Solution
findMaxAverage	643.py	/^def findMaxAverage(nums, k):$/;"	f
findMin	153-find-minimum-in-rotated-sorted-array.py	/^    def findMin(self, nums: List[int]) -> int:$/;"	m	class:Solution
findMinArrowShots	452.py	/^    def findMinArrowShots(self, points: List[List[int]]) -> int:$/;"	m	class:Solution
findMinimumOperations	leetcode5.py	/^    def findMinimumOperations(self, s1: str, s2: str, s3: str) -> int:$/;"	m	class:Solution
findPeakElement	162.py	/^    def findPeakElement(self, nums: List[int]) -> int:$/;"	m	class:Solution
find_lowest_cost_node	dijkstra.py	/^def find_lowest_cost_node(costs):$/;"	f
find_lowest_cost_node	dijkstra1.py	/^def find_lowest_cost_node(costs):$/;"	f
find_peak	binary_search/find_peak.py	/^def find_peak(nums, target):$/;"	f
firstBadVersion	278-first-bad-version.py	/^    def firstBadVersion(self, n: int) -> int:$/;"	m	class:Solution
five	102-binary-tree-level-order-traversavel.py	/^five = TreeNode(5, left=three, right=two)$/;"	v
five	110-balanced-binary-tree.py	/^five = TreeNode(5, left=three, right=two)$/;"	v
five	113.py	/^five = Node(5)$/;"	v
five	114.py	/^five = TreeNode(5, left=three, right=two)$/;"	v
five	206-reverse-linked-list.py	/^five = ListNode(5, next=None)$/;"	v
five	235.py	/^five = TreeNode(5, left=six, right=two)$/;"	v
five	236.py	/^five = TreeNode(5, left=six, right=two)$/;"	v
five	257.py	/^five = Node(5)$/;"	v
five	437.py	/^five = TreeNode(5)$/;"	v
five	543-diameter-of-binary-tree.py	/^five = TreeNode(5, left=three, right=two)$/;"	v
five	98-validate-binary-search-tree.py	/^five = TreeNode(5, left=three, right=two)$/;"	v
five	bst.py	/^five = TreeNode(5, left=three, right=two)$/;"	v
five	longest_zigzag.py	/^five = TreeNode(5, left=three, right=two)$/;"	v
five	path_sum3.py	/^five = TreeNode(5, left=three, right=two)$/;"	v
five	tree/height.py	/^five = TreeNode(5, left=three, right=two)$/;"	v
five	tree/leaf_node_sum.py	/^five = TreeNode(5, left=three, right=two)$/;"	v
flatten	114.py	/^    def flatten(self, root: Optional[TreeNode]) -> None:$/;"	m	class:Solution
floodFill	733-flood-fill.py	/^    def floodFill($/;"	m	class:Solution
fn	templates/binary_search.py	/^def fn(arr, target):$/;"	f
fn	templates/binary_search_duplicate_elements_left_most_insertion_point.py	/^def fn(arr, target):$/;"	f
fn	templates/binary_search_greedy.py	/^def fn(arr):$/;"	f
fn	templates/binary_search_maximum.py	/^def fn(arr):$/;"	f
fn	templates/binary_tree.py	/^def fn(root):$/;"	f
fn	templates/bisect_left.py	/^def fn(arr, target):$/;"	f
fn	templates/bisect_right.py	/^def fn(arr, target):$/;"	f
fn	templates/fast_and_slow_pointer.py	/^def fn(head):$/;"	f
fn	templates/graph_bfs.py	/^def fn(graph):$/;"	f
fn	templates/graph_dfs_iterative.py	/^def fn(graph):$/;"	f
fn	templates/graph_dfs_recursive.py	/^def fn(graph):$/;"	f
fn	templates/monotonic_increasing_stack.py	/^def fn(arr):$/;"	f
fn	templates/number_of_subarrays.py	/^def fn(arr, k):$/;"	f
fn	templates/prefix_sum.py	/^def fn(arr):$/;"	f
fn	templates/reverse_link_list.py	/^def fn(head):$/;"	f
fn	templates/sliding_window.py	/^def fn(arr):$/;"	f
fn	templates/string_building.py	/^def fn(arr):$/;"	f
fn	templates/top_k_elements_heap.py	/^def fn(arr, k):$/;"	f
fn	templates/trie.py	/^def fn(words):$/;"	f
fn	templates/two_pointers.py	/^def fn(arr):$/;"	f
foods	2353.py	/^foods = ["emgqdbo", "jmvfxjohq", "qnvseohnoe", "yhptazyko", "ocqmvmwjq"]$/;"	v
four	206-reverse-linked-list.py	/^four = ListNode(4, next=five)$/;"	v
four	235.py	/^four = TreeNode(4)$/;"	v
four	236.py	/^four = TreeNode(4)$/;"	v
four_left	113.py	/^four_left = Node(4, left=eleven)$/;"	v
four_left	257.py	/^four_left = Node(4, left=eleven)$/;"	v
four_left	437.py	/^four_left = TreeNode(4, left=eleven)$/;"	v
four_right	113.py	/^four_right = Node(4, left=five, right=one)$/;"	v
four_right	257.py	/^four_right = Node(4, left=five, right=one)$/;"	v
four_right	437.py	/^four_right = TreeNode(4, left=five, right=one)$/;"	v
g	455-assign-cookies.py	/^g = [1,2,3]$/;"	v
gcdOfStrings	1071.py	/^    def gcdOfStrings(self, str1: str, str2: str) -> str:$/;"	m	class:Solution
getGoodIndices	leetcode1.py	/^    def getGoodIndices(self, variables: List[List[int]], target: int) -> List[int]:$/;"	m	class:Solution2
get_graph	1466.py	/^        def get_graph(n, connections):$/;"	f	function:Solution.minReorder
get_graph	547.py	/^        def get_graph(isConnected):$/;"	f	function:Solution.findCircleNum
get_letters	17.py	/^    def get_letters(self, digit):$/;"	m	class:Solution
get_range	leetcode4.py	/^        def get_range(bars):$/;"	f	function:Solution.maximizeSquareHoleArea
good_nodes	good_node.py	/^def good_nodes(node, maximum=-math.inf):$/;"	f
graph	dijkstra.py	/^graph = {}$/;"	v
graph	dijkstra1.py	/^graph = {}$/;"	v
grid	200-number-of-islands.py	/^grid = [$/;"	v
grid	994.py	/^grid = [[2, 1, 1], [1, 1, 0], [0, 1, 1]]$/;"	v
groupAnagrams	49.py	/^    def groupAnagrams(self, strs: List[str]) -> List[List[str]]:$/;"	m	class:Solution
guess	guess_number.py	/^def guess(n):$/;"	f
h	875.py	/^h = 8$/;"	v
h	tree/height.py	/^h = rec_height(root)$/;"	v
hBars	100169.py	/^hBars = [2]$/;"	v
hBars	leetcode4.py	/^hBars = [3, 2]$/;"	v
hBars1	leetcode4.py	/^hBars1 = [2, 3]$/;"	v
hasCycle	141-linked-list_cycle.py	/^    def hasCycle(self, head: Optional[ListNode]) -> bool:$/;"	m	class:Solution
has_cycle	207-course-schedule.py	/^        def has_cycle(course):$/;"	f	function:Solution.canFinish
has_cycle	graph/cycle_detection.py	/^def has_cycle(graph, node, traversal_state):$/;"	f
heap	templates/dijkstra.py	/^heap = [(0, source)]$/;"	v
height	110-balanced-binary-tree.py	/^        def height(root):$/;"	f	function:Solution.isBalanced
helper	17.py	/^        def helper(digits):$/;"	f	function:Solution.letterCombinations
helper	437.py	/^        def helper(node):$/;"	f	function:Solution.pathSum
highestRated	2353.py	/^    def highestRated(self, cuisine: str) -> str:$/;"	m	class:FoodRatings
incremovableSubarrayCount	contest_120.py/100171.py	/^    def incremovableSubarrayCount(self, nums: List[int]) -> int:$/;"	m	class:Solution
inf	dijkstra.py	/^inf = float("inf")$/;"	v
inf	dijkstra1.py	/^inf = float("inf")$/;"	v
insert	57-insert-interval.py	/^    def insert($/;"	m	class:Solution
interval	57-insert-interval.py	/^interval = [[1,2],[3,5],[6,7],[8,10],[12,16]]$/;"	v
intervals	435.py	/^intervals = [[1, 2], [1, 10], [2, 3], [3, 4], [1, 3]]$/;"	v
intervals	56.py	/^intervals = [[1,3],[2,6],[8,10],[15,18]]$/;"	v
isBalanced	110-balanced-binary-tree.py	/^    def isBalanced(self, root: Optional[TreeNode]) -> bool:$/;"	m	class:Solution
isConnected	547.py	/^isConnected = [[1, 1, 0], [1, 1, 0], [0, 0, 1]]$/;"	v
isPalindrome	234-palindrome-linked-list.py	/^    def isPalindrome(self, head: Optional[ListNode]) -> bool:$/;"	m	class:Solution
isSubtree	572-subtree-of-another-tree.py	/^    def isSubtree(self, root: Optional[TreeNode], subRoot: Optional[TreeNode]) -> bool:$/;"	m	class:Solution
isValidBST	98-validate-binary-search-tree.py	/^    def isValidBST(self, root: Optional[TreeNode]) -> bool:$/;"	m	class:Solution
isValidSudoku	36-valid-sudoku.py	/^    def isValidSudoku(self, board: List[List[str]]) -> bool:$/;"	m	class:Solution
is_equal	572-subtree-of-another-tree.py	/^        def is_equal(n1, n2):$/;"	f	function:Solution.isSubtree
it_height_bfs	tree/height.py	/^def it_height_bfs(node: TreeNode):$/;"	f
it_height_dfs	tree/height.py	/^def it_height_dfs(node: TreeNode):$/;"	f
iterative	110-balanced-binary-tree.py	/^    def iterative(self, root: Optional[TreeNode]) -> bool:$/;"	m	class:Solution
ith	tree/height.py	/^ith = it_height_dfs(root)$/;"	v
jump	45.py	/^    def jump(self, nums: List[int]) -> int:$/;"	m	class:Solution
k	215.py	/^k = 2$/;"	v
k	2917.py	/^k = 1$/;"	v
k	973-k-closest-points-to-origin.py	/^k = 1       $/;"	v
k	contest_120.py/2542.py	/^k = 3$/;"	v
k	leetcode1.py	/^k = 2$/;"	v
k	leetcode2.py	/^k = 1$/;"	v
kClosest	973-k-closest-points-to-origin.py	/^    def kClosest(self, points: List[List[int]], k: int) -> List[List[int]]:$/;"	m	class:Solution
key	dijkstra1.py	/^    key = parents[key]$/;"	v
key	dijkstra1.py	/^key = "finish"$/;"	v
largestPerimeter	contest_120.py/100180.py	/^    def largestPerimeter(self, nums: List[int]) -> int:$/;"	m	class:Solution
leaf_node_sum	tree/leaf_node_sum.py	/^def leaf_node_sum(root):$/;"	f
leaf_node_sum_it	tree/leaf_node_sum.py	/^def leaf_node_sum_it(root):$/;"	f
lengthOfLIS	300.py	/^    def lengthOfLIS(self, nums: List[int]) -> int:$/;"	m	class:Solution
lengthOfLongestSubsequence	2915.py	/^    def lengthOfLongestSubsequence(self, nums: List[int], target: int) -> int:$/;"	m	class:Solution
lengthOfLongestSubstring	3-longest-substring-without-repeating-character.py	/^    def lengthOfLongestSubstring(self, s: str) -> int:$/;"	m	class:Solution
lengthOfLongestSubstring	3.py	/^    def lengthOfLongestSubstring(self, s: str) -> int:$/;"	m	class:Solution
letterCombinations	17.py	/^    def letterCombinations(self, digits: str) -> List[str]:$/;"	m	class:Solution
levelOrder	102-binary-tree-level-order-traversavel.py	/^    def levelOrder(self, root: Optional[TreeNode]) -> List[List[int]]:$/;"	m	class:Solution
longestCommonSubsequence	1143.py	/^    def longestCommonSubsequence(self, text1: str, text2: str) -> int:$/;"	m	class:Solution
longestConsecutive	128.py	/^    def longestConsecutive(self, nums: List[int]) -> int:$/;"	m	class:Solution
longestPalindrome	409-longest-palindrome.py	/^    def longestPalindrome(self, s: str) -> int:$/;"	m	class:Solution
lowestCommonAncestor	235.py	/^    def lowestCommonAncestor($/;"	m	class:Solution
lowestCommonAncestor	236.py	/^    def lowestCommonAncestor($/;"	m	class:Solution
m	100169.py	/^m = 6$/;"	v
m	62.py	/^m = 3 $/;"	v
m	88.py	/^m = 3$/;"	v
m	leetcode4.py	/^m = 4$/;"	v
m1	leetcode4.py	/^m1 = 1$/;"	v
mat	542-01-matrix.py	/^mat = [[0,0,0],[0,1,0],[1,1,1]]$/;"	v
maxDepth	104-maximum-depth-of-binary-tree.py	/^    def maxDepth(self, root: Optional[TreeNode]) -> int:$/;"	m	class:Solution
maxProfit	122.py	/^    def maxProfit(self, prices: List[int]) -> int:$/;"	m	class:Solution
maxProfit	714.py	/^    def maxProfit(self, prices: List[int], fee: int) -> int:$/;"	m	class:Solution
maxScore	contest_120.py/2542.py	/^    def maxScore(self, nums1: List[int], nums2: List[int], k: int) -> int:$/;"	m	class:Solution
maxSubArray	53-maximum-subarray.py	/^    def maxSubArray(self, nums: List[int]) -> int:$/;"	m	class:Solution
maxSubarrayLength	leetcode2.py	/^    def maxSubarrayLength(self, nums: List[int], k: int) -> int:$/;"	m	class:Solution
maximizeSquareArea	100169.py	/^    def maximizeSquareArea($/;"	m	class:Solution
maximizeSquareHoleArea	leetcode4.py	/^    def maximizeSquareHoleArea($/;"	m	class:Solution
maximumLength	100185-find-longest-special-substring-that-occurs-thrice-i.py	/^    def maximumLength(self, s: str) -> int:$/;"	m	class:Solution
maximumXorProduct	leetcode5.py	/^    def maximumXorProduct(self, a: int, b: int, n: int) -> int:$/;"	m	class:Solution
merge	56.py	/^    def merge(self, intervals: List[List[int]]) -> List[List[int]]:$/;"	m	class:Solution
merge	88.py	/^    def merge(self, nums1: List[int], m: int, nums2: List[int], n: int) -> None:$/;"	m	class:Solution
middleNode	876-middle-of-the-linked-list.py	/^    def middleNode(self, head: Optional[ListNode]) -> Optional[ListNode]:$/;"	m	class:Solution
minChanges	2914.py	/^    def minChanges(self, s: str) -> int:$/;"	m	class:Solution
minCostClimbingStairs	746.py	/^    def minCostClimbingStairs(self, cost: List[int]) -> int:$/;"	m	class:Solution
minEatingSpeed	875.py	/^    def minEatingSpeed(self, piles: List[int], h: int) -> int:$/;"	m	class:Solution
minGroupsForValidAssignment	2910.py	/^    def minGroupsForValidAssignment(self, nums: List[int]) -> int:$/;"	m	class:Solution
minOperations	2009.py	/^    def minOperations(self, nums: List[int]) -> int:$/;"	m	class:Solution
minProcessingTime	2895.py	/^    def minProcessingTime(self, processorTime: List[int], tasks: List[int]) -> int:$/;"	m	class:Solution
minReorder	1466.py	/^    def minReorder(self, n: int, connections: List[List[int]]) -> int:$/;"	m	class:Solution
minSubArrayLen	209.py	/^    def minSubArrayLen(self, target: int, nums: List[int]) -> int:$/;"	m	class:Solution
minSum	2918.py	/^    def minSum(self, nums1: List[int], nums2: List[int]) -> int:$/;"	m	class:Solution
min_cost	climbing_stairs.py	/^def min_cost(cost):$/;"	f
minimumAddedCoins	leetcode3.py	/^    def minimumAddedCoins(self, coins: List[int], target: int) -> int:$/;"	m	class:Solution
minimumSteps	leetcode5.py	/^    def minimumSteps(self, s: str) -> int:$/;"	m	class:Solution
minimumSum	2908.py	/^    def minimumSum(self, nums: List[int]) -> int:$/;"	m	class:Solution
minus_three	102-binary-tree-level-order-traversavel.py	/^minus_three = TreeNode(-3, right=eleven_leaf)$/;"	v
minus_three	110-balanced-binary-tree.py	/^minus_three = TreeNode(-3, right=eleven_leaf)$/;"	v
minus_three	114.py	/^minus_three = TreeNode(-3, right=eleven_leaf)$/;"	v
minus_three	543-diameter-of-binary-tree.py	/^minus_three = TreeNode(-3, right=eleven_leaf)$/;"	v
minus_three	98-validate-binary-search-tree.py	/^minus_three = TreeNode(-3, right=eleven_leaf)$/;"	v
minus_three	bst.py	/^minus_three = TreeNode(-3, right=eleven_leaf)$/;"	v
minus_three	longest_zigzag.py	/^minus_three = TreeNode(-3, right=eleven_leaf)$/;"	v
minus_three	path_sum3.py	/^minus_three = TreeNode(-3, right=eleven_leaf)$/;"	v
minus_three	tree/height.py	/^minus_three = TreeNode(-3, right=eleven_leaf)$/;"	v
minus_three	tree/leaf_node_sum.py	/^minus_three = TreeNode(-3, right=eleven_leaf)$/;"	v
minus_two_leaf	102-binary-tree-level-order-traversavel.py	/^minus_two_leaf = TreeNode(-2)$/;"	v
minus_two_leaf	110-balanced-binary-tree.py	/^minus_two_leaf = TreeNode(-2)$/;"	v
minus_two_leaf	114.py	/^minus_two_leaf = TreeNode(-2)$/;"	v
minus_two_leaf	543-diameter-of-binary-tree.py	/^minus_two_leaf = TreeNode(-2)$/;"	v
minus_two_leaf	98-validate-binary-search-tree.py	/^minus_two_leaf = TreeNode(-2)$/;"	v
minus_two_leaf	bst.py	/^minus_two_leaf = TreeNode(-2)$/;"	v
minus_two_leaf	longest_zigzag.py	/^minus_two_leaf = TreeNode(-2)$/;"	v
minus_two_leaf	path_sum3.py	/^minus_two_leaf = TreeNode(-2)$/;"	v
minus_two_leaf	tree/height.py	/^minus_two_leaf = TreeNode(-2)$/;"	v
minus_two_leaf	tree/leaf_node_sum.py	/^minus_two_leaf = TreeNode(-2)$/;"	v
n	100169.py	/^n = 7$/;"	v
n	1466.py	/^n = 6$/;"	v
n	216.py	/^n = 13$/;"	v
n	62.py	/^n = 7 $/;"	v
n	790.py	/^n = 5$/;"	v
n	88.py	/^n = 3$/;"	v
n	leetcode4.py	/^n = 2$/;"	v
n1	leetcode4.py	/^n1 = 2$/;"	v
name	study_guide.py	/^    name = name.strip()$/;"	v
neighbors	dijkstra.py	/^    neighbors = graph[node]$/;"	v
neighbors	dijkstra1.py	/^    neighbors = graph[node]$/;"	v
new_cost	dijkstra.py	/^        new_cost = cost + neighbors[n]$/;"	v
new_cost	dijkstra1.py	/^        new_cost = cost + neighbors[n]$/;"	v
node	dijkstra.py	/^    node = find_lowest_cost_node(costs)$/;"	v
node	dijkstra.py	/^node = find_lowest_cost_node(costs)$/;"	v
node	dijkstra1.py	/^    node = find_lowest_cost_node(costs)$/;"	v
node	dijkstra1.py	/^node = find_lowest_cost_node(costs)$/;"	v
num	190-reverse-bits.py	/^num = 4$/;"	v
numCoins	322-coin-change.py	/^        def numCoins(coins, amount):$/;"	f	function:Solution.coinChange
numIslands	200-number-of-islands.py	/^    def numIslands(self, grid: List[List[str]]) -> int:$/;"	m	class:Solution
numRows	6.py	/^numRows = 3$/;"	v
numTilings	790.py	/^    def numTilings(self, n: int) -> int:$/;"	m	class:Solution
number	gre.py	/^    number = "5" + str(i) + "5"$/;"	v
number	guess_number.py	/^number = random.randint(1, 100)$/;"	v
nums	1-two-sum.py	/^nums = [3, 2, 4]$/;"	v
nums	1-two-sum.py	/^nums = [3, 3]$/;"	v
nums	100166-check-if-bitwise-or-has-trailing-zeros.py	/^nums = [2, 4, 6, 8]$/;"	v
nums	108-convert-sorted-array-to-binary-search-tree.py	/^nums = [-10,-3,0,5,9]$/;"	v
nums	128.py	/^nums = [0,3,7,2,5,8,4,6,0,1]$/;"	v
nums	153-find-minimum-in-rotated-sorted-array.py	/^nums = [3, 4, 5, 6, 0, 1, 2]$/;"	v
nums	162.py	/^nums = [1, 2, 1, 3, 5, 6, 4]$/;"	v
nums	162.py	/^nums = [2, 1]$/;"	v
nums	198.py	/^nums = [2, 1, 1, 2]$/;"	v
nums	2009.py	/^nums = [1, 2, 3, 4, 6]$/;"	v
nums	2009.py	/^nums = [8, 10, 16, 18, 10, 10, 16, 13, 13, 16]$/;"	v
nums	2009.py	/^nums = [8, 5, 9, 9, 8, 4]$/;"	v
nums	209.py	/^nums = [2, 7, 1, 2, 4, 3]$/;"	v
nums	215.py	/^nums = [3, 2, 1, 5, 6, 4]$/;"	v
nums	238-product-except-self.py	/^nums = [1, 2, 3, 4]$/;"	v
nums	26.py	/^nums = [1, 1, 1, 2, 2, 3]$/;"	v
nums	2610-convert-an-array-into-2d-matrix.py	/^nums = [1, 1, 1, 1, 1, 1, 1]$/;"	v
nums	2610-convert-an-array-into-2d-matrix.py	/^nums = [1,3,4,1,2,3,1]$/;"	v
nums	27.py	/^nums = [0,1,2,2,3,0,4,2]$/;"	v
nums	2908.py	/^nums = [5, 4, 8, 7, 10,2]$/;"	v
nums	2910.py	/^nums = [1,1,3,3,1,1,2,2,3,1,3,2]$/;"	v
nums	2910.py	/^nums = [10, 10, 10, 3, 1, 1]$/;"	v
nums	2910.py	/^nums = [3,2,3,2,3]$/;"	v
nums	2917.py	/^nums = [16]$/;"	v
nums	2917.py	/^nums = [7, 12, 9, 8, 9, 15]$/;"	v
nums	45.py	/^nums = [2, 3, 1, 1, 4]$/;"	v
nums	46-permutations.py	/^nums = [0, 1]$/;"	v
nums	46-permutations.py	/^nums = [1, 2, 3]$/;"	v
nums	55.py	/^nums = [2, 3, 1, 1, 4]$/;"	v
nums	643.py	/^nums = [0, 4, 0, 3, 2]$/;"	v
nums	75-sort-colors.py	/^nums = ["2", "2" , "2" , "1" , "1", "2", "0", "0", "1"]$/;"	v
nums	78-subsets.py	/^nums = [1, 2, 3]$/;"	v
nums	80.py	/^nums = [0,0,1,1,1,1,2,3,3]$/;"	v
nums	binary_search/find_peak.py	/^nums = [2, 3, 4, 6, 9, 12, 11, 8, 6, 4, 1]$/;"	v
nums	binary_search/find_peak.py	/^nums = [T,T,T,T,T,T,F,F,F,F]$/;"	v
nums	contest_120.py/100171.py	/^nums = [1, 2, 3, 4]$/;"	v
nums	contest_120.py/100171.py	/^nums = [6, 5, 7, 8]$/;"	v
nums	leetcode1.py	/^nums = [1, 3, 2, 3, 3]$/;"	v
nums	leetcode2.py	/^nums = [1, 2, 2, 1, 3]$/;"	v
nums1	2918.py	/^nums1 = [3, 2, 0, 1, 0]$/;"	v
nums1	2918.py	/^nums1 = [9, 5]$/;"	v
nums1	88.py	/^nums1 = [4, 5, 6, 0, 0, 0]$/;"	v
nums1	contest_120.py/2542.py	/^nums1 = [1, 3, 3, 2]$/;"	v
nums2	2918.py	/^nums2 = [15, 12, 5, 21, 4, 26, 27, 9, 6, 29, 0, 18, 16, 0, 0, 0, 20]$/;"	v
nums2	2918.py	/^nums2 = [6, 5, 0]$/;"	v
nums2	88.py	/^nums2 = [1, 2, 3]$/;"	v
nums2	contest_120.py/2542.py	/^nums2 = [2, 1, 3, 4]$/;"	v
obj	2353.py	/^obj = FoodRatings(foods, cuisines, ratings)$/;"	v
one	113.py	/^one = Node(1)$/;"	v
one	206-reverse-linked-list.py	/^one = ListNode(1, next=two)$/;"	v
one	235.py	/^one = TreeNode(1, left=zero, right=eight)$/;"	v
one	236.py	/^one = TreeNode(1, left=zero, right=eight)$/;"	v
one	257.py	/^one = Node(1)$/;"	v
one	437.py	/^one = TreeNode(1)$/;"	v
one	templates/reverse_link_list.py	/^one = Node(1, next=two)$/;"	v
one_leaf	102-binary-tree-level-order-traversavel.py	/^one_leaf = TreeNode(1)$/;"	v
one_leaf	110-balanced-binary-tree.py	/^one_leaf = TreeNode(1)$/;"	v
one_leaf	114.py	/^one_leaf = TreeNode(1)$/;"	v
one_leaf	543-diameter-of-binary-tree.py	/^one_leaf = TreeNode(1)$/;"	v
one_leaf	98-validate-binary-search-tree.py	/^one_leaf = TreeNode(1)$/;"	v
one_leaf	bst.py	/^one_leaf = TreeNode(1)$/;"	v
one_leaf	longest_zigzag.py	/^one_leaf = TreeNode(1)$/;"	v
one_leaf	path_sum3.py	/^one_leaf = TreeNode(1)$/;"	v
one_leaf	tree/height.py	/^one_leaf = TreeNode(1)$/;"	v
one_leaf	tree/leaf_node_sum.py	/^one_leaf = TreeNode(1)$/;"	v
orangesRotting	994-rotting-oranges.py	/^    def orangesRotting(self, grid: List[List[int]]) -> int:$/;"	m	class:Solution
orangesRotting	994.py	/^    def orangesRotting(self, grid: List[List[int]]) -> int:$/;"	m	class:Solution
parents	dijkstra.py	/^parents = {}$/;"	v
parents	dijkstra1.py	/^parents = {}$/;"	v
path	dijkstra1.py	/^path = deque()$/;"	v
pathSum	437.py	/^    def pathSum(self, root: Optional[TreeNode], targetSum: int) -> int:$/;"	m	class:Solution
pathSum3	path_sum3.py	/^def pathSum3(root, targetSum):$/;"	f
peek	232-implement-queue-using-stack.py	/^    def peek(self) -> int:$/;"	m	class:MyQueue
permute	46-permutations.py	/^    def permute(self, nums: List[int]) -> List[List[int]]:$/;"	m	class:Solution
piles	875.py	/^piles = [3, 6, 7, 11]$/;"	v
points	452.py	/^points = [[10, 16], [2, 8], [1, 6], [7, 12]]$/;"	v
points	973-k-closest-points-to-origin.py	/^points = [[1,3],[-2,2]]$/;"	v
pop	232-implement-queue-using-stack.py	/^    def pop(self) -> int:$/;"	m	class:MyQueue
popSmallest	2336.py	/^    def popSmallest(self) -> int:$/;"	m	class:SmallestInfiniteSet
potions	2300.py	/^potions = [8, 5, 8]$/;"	v
predictPartyVictory	649.py	/^    def predictPartyVictory(self, senate: str) -> str:$/;"	m	class:Solution
prices	122.py	/^prices = [7, 1, 5, 3, 6, 4]$/;"	v
prices	714.py	/^prices = [1, 3, 2,8,4,9]$/;"	v
printdfs	path_sum3.py	/^def printdfs(node):$/;"	f
problems	study_guide.py	/^problems = {}$/;"	v
processed	dijkstra.py	/^processed = []$/;"	v
processed	dijkstra1.py	/^processed = []$/;"	v
processorTime	2895.py	/^processorTime = [8, 10]$/;"	v
prod	238-product-except-self.py	/^prod = Solution().productExceptSelf(nums)$/;"	v
productExceptSelf	238-product-except-self.py	/^    def productExceptSelf(self, nums: List[int]) -> List[int]:$/;"	m	class:Solution
productExceptSelf	238.py	/^    def productExceptSelf(self, nums: List[int]) -> List[int]:$/;"	m	class:Solution
push	232-implement-queue-using-stack.py	/^    def push(self, x: int) -> None:$/;"	m	class:MyQueue
q	643.py	/^q = [1, 12, -5, -6, 50, 3]$/;"	v
q_id	study_guide.py	/^    q_id = int(q_id)$/;"	v
queries	399.py	/^queries = [$/;"	v
ratings	2353.py	/^ratings = [2, 6, 18, 6, 5]$/;"	v
rec_height	tree/height.py	/^def rec_height(node):$/;"	f
removeDuplicates	26.py	/^    def removeDuplicates(self, nums: List[int]) -> int:$/;"	m	class:Solution
removeDuplicates	80.py	/^    def removeDuplicates(self, nums: List[int]) -> int:$/;"	m	class:Solution
removeElement	27.py	/^    def removeElement(self, nums: List[int], val: int) -> int:$/;"	m	class:Solution
rev	templates/reverse_link_list.py	/^rev = fn(one)$/;"	v
reverseBits	190-reverse-bits.py	/^    def reverseBits(self, n: int) -> int:$/;"	m	class:Solution
reverseList	206-reverse-linked-list.py	/^    def reverseList(self, head: Optional[ListNode]) -> Optional[ListNode]:$/;"	m	class:Solution
rob	198.py	/^    def rob(self, nums: List[int]) -> int:$/;"	m	class:Solution
romanToInt	13-roman-to-integer.py	/^    def romanToInt(self, s: str) -> int:$/;"	m	class:Solution
rooms	841.py	/^rooms = [[1, 3], [3, 0, 1], [2], [0]]$/;"	v
rooms	841.py	/^rooms = [[1], [2], [3], []]$/;"	v
root	102-binary-tree-level-order-traversavel.py	/^root = TreeNode(10, left=five, right=minus_three)$/;"	v
root	110-balanced-binary-tree.py	/^root = TreeNode(10, left=five, right=minus_three)$/;"	v
root	113.py	/^root = Node(5, left=four_left, right=eight)$/;"	v
root	114.py	/^root = TreeNode(10, left=five, right=minus_three)$/;"	v
root	235.py	/^root = TreeNode(3, left=five, right=one)$/;"	v
root	236.py	/^root = TreeNode(3, left=five, right=one)$/;"	v
root	257.py	/^root = Node(5, left=four_left, right=eight)$/;"	v
root	437.py	/^root = TreeNode(5, left=four_left, right=eight)$/;"	v
root	543-diameter-of-binary-tree.py	/^root = TreeNode(10, left=five, right=minus_three)$/;"	v
root	98-validate-binary-search-tree.py	/^root = TreeNode(10, left=None, right=minus_three)$/;"	v
root	bst.py	/^root = TreeNode(10, left=five, right=minus_three)$/;"	v
root	longest_zigzag.py	/^root = TreeNode(10)$/;"	v
root	longest_zigzag.py	/^root = TreeNode(10, left=five, right=minus_three)$/;"	v
root	path_sum3.py	/^root = TreeNode(10)$/;"	v
root	path_sum3.py	/^root = TreeNode(10, left=five, right=minus_three)$/;"	v
root	tree/height.py	/^root = TreeNode(10, left=five, right=minus_three)$/;"	v
root	tree/leaf_node_sum.py	/^root = TreeNode(10, left=five, right=minus_three)$/;"	v
root_left	longest_zigzag.py	/^root_left = TreeNode(5)$/;"	v
root_left	path_sum3.py	/^root_left = TreeNode(5)$/;"	v
s	100185-find-longest-special-substring-that-occurs-thrice-i.py	/^s = "aaaabbbbbbaaaaa"$/;"	v
s	2914.py	/^s = "1001"$/;"	v
s	2914.py	/^s = "111111111110010001"$/;"	v
s	3.py	/^s = "pwwkew"$/;"	v
s	455-assign-cookies.py	/^s = [1,1]$/;"	v
s	6.py	/^s = "PAYPALISHIRING"$/;"	v
s	leetcode5.py	/^s = "101"$/;"	v
s1	leetcode5.py	/^s1 = "abc"$/;"	v
s2	decode_str.py	/^s2 = "3[a2[c]]"$/;"	v
s2	leetcode5.py	/^s2 = "abb"$/;"	v
s3	leetcode5.py	/^s3 = "ab"$/;"	v
search	33-search-in-rotated-array.py	/^    def search(self, nums: List[int], target: int) -> int:$/;"	m	class:Solution
search	704-binary-search.py	/^    def search(self, nums: List[int], target: int) -> int:$/;"	m	class:Solution
seven	113.py	/^seven = Node(7)$/;"	v
seven	235.py	/^seven = TreeNode(7)$/;"	v
seven	236.py	/^seven = TreeNode(7)$/;"	v
seven	257.py	/^seven = Node(7)$/;"	v
seven	437.py	/^seven = TreeNode(7)$/;"	v
sides	contest_120.py/100180.py	/^sides = [1, 12, 1, 2, 5, 50, 3]$/;"	v
six	235.py	/^six = TreeNode(6)$/;"	v
six	236.py	/^six = TreeNode(6)$/;"	v
slidingWindow	leetcode1.py	/^    def slidingWindow(self, nums, k):$/;"	m	class:Solution3
solution	108-convert-sorted-array-to-binary-search-tree.py	/^solution = Solution().sortedArrayToBST(nums)$/;"	v
solution	13-roman-to-integer.py	/^solution = Solution()$/;"	v
solution	153-find-minimum-in-rotated-sorted-array.py	/^solution = Solution().findMin(nums)$/;"	v
solution	207-course-schedule.py	/^solution = Solution().canFinish(numCourses=2, prerequisites=[[1, 0], [0, 1]])$/;"	v
solution	207-course-schedule.py	/^solution = Solution().canFinish(numCourses=2, prerequisites=[[1, 0]])$/;"	v
solution	207-course-schedule.py	/^solution = Solution().canFinish(numCourses=4, prerequisites=[[1, 0], [2, 1], [0, 2]])$/;"	v
solution	234-palindrome-linked-list.py	/^solution = Solution().isPalindrome(f1)$/;"	v
solution	33-search-in-rotated-array.py	/^solution = Solution().search(nums = [3, 1], target = 3)$/;"	v
solution	33-search-in-rotated-array.py	/^solution = Solution().search(nums = [4,5,6,7,0,1,2], target = 0)$/;"	v
solution	33-search-in-rotated-array.py	/^solution = Solution().search(nums = [5,1,3], target = 1)$/;"	v
solution	455-assign-cookies.py	/^solution = Solution()$/;"	v
solution	53-maximum-subarray.py	/^solution = Solution()$/;"	v
solution	57-insert-interval.py	/^solution = Solution()$/;"	v
solution	67-add-binary.py	/^solution = Solution()$/;"	v
solution	704-binary-search.py	/^solution = Solution()$/;"	v
solution	733-flood-fill.py	/^solution = Solution()$/;"	v
solution	guess_number.py	/^def solution(n):$/;"	f
sortColors	75-sort-colors.py	/^    def sortColors(self, nums: List[int]) -> None:$/;"	m	class:Solution
sortedArrayToBST	108-convert-sorted-array-to-binary-search-tree.py	/^    def sortedArrayToBST(self, nums: List[int]) -> Optional[TreeNode]:$/;"	m	class:Solution
sortedSquares	977-squares-of-sorted-array.py	/^    def sortedSquares(self, nums: List[int]) -> List[int]:$/;"	m	class:Solution
spells	2300.py	/^spells = [3, 1, 2]$/;"	v
stack	257.py	/^stack = [5, 4, 8, 11, None, 13, 4, 7, 2, None, None, 5, 1]$/;"	v
start	1466.py	/^start = 0$/;"	v
str1	1071.py	/^str1 = "ABABAB"$/;"	v
str2	1071.py	/^str2 = "AB"$/;"	v
strs	49.py	/^strs = ["eat", "tea", "tan", "ate", "nat", "bat"]$/;"	v
subsets	78-subsets.py	/^    def subsets(self, nums: List[int]) -> List[List[int]]:$/;"	m	class:Solution
success	2300.py	/^success = 16$/;"	v
successfulPairs	2300.py	/^    def successfulPairs($/;"	m	class:Solution
sumCounts	2913.py	/^    def sumCounts(self, nums: List[int]) -> int:$/;"	m	class:Solution
sum_paths	39.py	/^    def sum_paths(self, candidates, target, answers, path=[]):$/;"	m	class:Solution
target	1-two-sum.py	/^target = 6$/;"	v
target	209.py	/^target = 7$/;"	v
target	39.py	/^target = 7$/;"	v
target	leetcode1.py	/^    target = 2$/;"	v	class:Solution2
target	leetcode3.py	/^target = 19$/;"	v
tasks	2895.py	/^tasks = [2, 2, 3, 1, 8, 7, 4, 5]$/;"	v
text1	1143.py	/^text1 = "abcde"$/;"	v
text2	1143.py	/^text2 = "ace"$/;"	v
thirteen	113.py	/^thirteen = Node(13)$/;"	v
thirteen	257.py	/^thirteen = Node(13)$/;"	v
thirteen	437.py	/^thirteen = TreeNode(13)$/;"	v
three	102-binary-tree-level-order-traversavel.py	/^three = TreeNode(3, left=three_leaf, right=minus_two_leaf)$/;"	v
three	110-balanced-binary-tree.py	/^three = TreeNode(3, left=three_leaf, right=minus_two_leaf)$/;"	v
three	114.py	/^three = TreeNode(3, left=three_leaf, right=minus_two_leaf)$/;"	v
three	206-reverse-linked-list.py	/^three = ListNode(3, next=four)$/;"	v
three	543-diameter-of-binary-tree.py	/^three = TreeNode(3, left=three_leaf, right=minus_two_leaf)$/;"	v
three	98-validate-binary-search-tree.py	/^three = TreeNode(3, left=three_leaf, right=minus_two_leaf)$/;"	v
three	bst.py	/^three = TreeNode(3, left=three_leaf, right=minus_two_leaf)$/;"	v
three	longest_zigzag.py	/^three = TreeNode(3, left=three_leaf, right=minus_two_leaf)$/;"	v
three	path_sum3.py	/^three = TreeNode(3, left=three_leaf, right=minus_two_leaf)$/;"	v
three	templates/reverse_link_list.py	/^three = Node(3)$/;"	v
three	tree/height.py	/^three = TreeNode(3, left=three_leaf, right=minus_two_leaf)$/;"	v
three	tree/leaf_node_sum.py	/^three = TreeNode(3, left=three_leaf, right=minus_two_leaf)$/;"	v
threeSum	15-3sum.py	/^    def threeSum(self, nums: List[int]) -> List[List[int]]:$/;"	m	class:Solution
three_leaf	102-binary-tree-level-order-traversavel.py	/^three_leaf = TreeNode(3)$/;"	v
three_leaf	110-balanced-binary-tree.py	/^three_leaf = TreeNode(3)$/;"	v
three_leaf	114.py	/^three_leaf = TreeNode(3)$/;"	v
three_leaf	543-diameter-of-binary-tree.py	/^three_leaf = TreeNode(3)$/;"	v
three_leaf	98-validate-binary-search-tree.py	/^three_leaf = TreeNode(3)$/;"	v
three_leaf	bst.py	/^three_leaf = TreeNode(3)$/;"	v
three_leaf	longest_zigzag.py	/^three_leaf = TreeNode(3)$/;"	v
three_leaf	path_sum3.py	/^three_leaf = TreeNode(3)$/;"	v
three_leaf	tree/height.py	/^three_leaf = TreeNode(3)$/;"	v
three_leaf	tree/leaf_node_sum.py	/^three_leaf = TreeNode(3)$/;"	v
tokens	150-evaluate-reverse-polish-notation.py	/^tokens = ["10","6","9","3","+","-11","*","\/","*","17","+","5","+"]$/;"	v
tokens	150-evaluate-reverse-polish-notation.py	/^tokens = ["4","13","5","\/","+"]$/;"	v
tprint	543-diameter-of-binary-tree.py	/^def tprint(node, inorder=False):$/;"	f
tprint	bst.py	/^def tprint(node, inorder=False):$/;"	f
tprint	tree/height.py	/^def tprint(node):$/;"	f
tprint	tree/leaf_node_sum.py	/^def tprint(node):$/;"	f
two	102-binary-tree-level-order-traversavel.py	/^two = TreeNode(2, right=one_leaf)$/;"	v
two	110-balanced-binary-tree.py	/^two = TreeNode(2, right=one_leaf)$/;"	v
two	113.py	/^two = Node(2)$/;"	v
two	114.py	/^two = TreeNode(2, right=one_leaf)$/;"	v
two	206-reverse-linked-list.py	/^two = ListNode(2, next=three)$/;"	v
two	235.py	/^two = TreeNode(2, left=seven, right=four)$/;"	v
two	236.py	/^two = TreeNode(2, left=seven, right=four)$/;"	v
two	257.py	/^two = Node(2)$/;"	v
two	437.py	/^two = TreeNode(2)$/;"	v
two	543-diameter-of-binary-tree.py	/^two = TreeNode(2, right=one_leaf)$/;"	v
two	98-validate-binary-search-tree.py	/^two = TreeNode(2, right=one_leaf)$/;"	v
two	bst.py	/^two = TreeNode(2, right=one_leaf)$/;"	v
two	longest_zigzag.py	/^two = TreeNode(2, right=one_leaf)$/;"	v
two	path_sum3.py	/^two = TreeNode(2, right=one_leaf)$/;"	v
two	templates/reverse_link_list.py	/^two = Node(2, next=three)$/;"	v
two	tree/height.py	/^two = TreeNode(2, right=one_leaf)$/;"	v
two	tree/leaf_node_sum.py	/^two = TreeNode(2, right=one_leaf)$/;"	v
twoSum	1-two-sum.py	/^    def twoSum(self, nums: List[int], target: int) -> List[int]:$/;"	m	class:Solution
twoSum	contest_117.py	/^    def twoSum(self, limit, target) -> int:$/;"	m	class:Solution
uniquePaths	62.py	/^    def uniquePaths(self, m: int, n: int) -> int:$/;"	m	class:Solution
updateMatrix	542-01-matrix.py	/^    def updateMatrix(self, mat: List[List[int]]) -> List[List[int]]:$/;"	m	class:Solution
vBars	100169.py	/^vBars = [4]$/;"	v
vBars	leetcode4.py	/^vBars = [4, 2]$/;"	v
vBars2	leetcode4.py	/^vBars2 = [2]$/;"	v
val	27.py	/^val = 2$/;"	v
values	399.py	/^values = [3.0, 4.0, 5.0, 6.0]$/;"	v
variables	leetcode1.py	/^    variables = [[2, 3, 3, 10], [3, 3, 3, 1], [6, 1, 1, 4]]$/;"	v	class:Solution2
word	79-word-search.py	/^word = "AAAAAAAAAAAABAA"$/;"	v
word	79-word-search.py	/^word = "AAB"$/;"	v
word	79-word-search.py	/^word = "ABCESEEEFS"$/;"	v
word	79-word-search.py	/^word = "SEE"$/;"	v
word	79-word-search.py	/^word = "aa"$/;"	v
word	79-word-search.py	/^word = "aba"$/;"	v
zero	235.py	/^zero = TreeNode(0)$/;"	v
zero	236.py	/^zero = TreeNode(0)$/;"	v
